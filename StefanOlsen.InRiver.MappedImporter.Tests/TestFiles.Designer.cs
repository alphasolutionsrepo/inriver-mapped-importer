/*
 * Copyright (c) 2018 Stefan Holm Olsen
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

ï»¿//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StefanOlsen.InRiver.MappedImporter.Tests {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class TestFiles {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal TestFiles() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("StefanOlsen.InRiver.MappedImporter.Tests.TestFiles", typeof(TestFiles).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
        ///&lt;ImportMapping xmlns=&quot;http://schemas.stefanolsen.com/inRiver/ImportMapping&quot;&gt;
        ///  &lt;XmlNamespaces&gt;
        ///    &lt;Namespace Prefix=&quot;&quot; Uri=&quot;http://schemas.stefanolsen.com/inRiver/TestCatalog&quot;/&gt;
        ///    &lt;Namespace Prefix=&quot;ns&quot; Uri=&quot;http://schemas.stefanolsen.com/inRiver/TestCatalog&quot;/&gt;
        ///  &lt;/XmlNamespaces&gt;
        ///  &lt;Languages&gt;
        ///    &lt;Language Original=&quot;da&quot; InRiver=&quot;da&quot;/&gt;
        ///    &lt;Language Original=&quot;en&quot; InRiver=&quot;en&quot;/&gt;
        ///  &lt;/Languages&gt;
        ///  &lt;Entity EntityType=&quot;Product&quot; Root=&quot;/ns:catalog-export/ns:prod [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FieldMapping {
            get {
                return ResourceManager.GetString("FieldMapping", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;catalog-export xmlns:foo=&quot;http://www.foo.org/&quot; xmlns:bar=&quot;http://www.bar.org&quot;&gt;
        ///	&lt;product id=&quot;A052&quot;&gt;
        ///		&lt;product-name xml:lang=&quot;nl&quot;&gt;karim Maher&lt;/product-name&gt;
        ///		&lt;product-name xml:lang=&quot;en&quot;&gt;Karim Maher&lt;/product-name&gt;
        ///		&lt;product-name xml:lang=&quot;fr&quot;&gt;Karim Maher&lt;/product-name&gt;
        ///		&lt;product-name xml:lang=&quot;de&quot;&gt;Karim Maher&lt;/product-name&gt;
        ///		&lt;product-name xml:lang=&quot;sv&quot;&gt;karim Maher&lt;/product-name&gt;
        ///		&lt;brand&gt;rosmarygoodenough&lt;/brand&gt;
        ///		&lt;main-category&gt;jacket&lt;/main-category&gt;
        ///		&lt;sub-category&gt;blazers&lt;/sub-category&gt;
        ///		&lt;markets&gt;
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TestData {
            get {
                return ResourceManager.GetString("TestData", resourceCulture);
            }
        }
    }
}
